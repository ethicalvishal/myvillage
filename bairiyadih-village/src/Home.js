import React, { useState, useEffect } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { collection, query, where, getDocs } from 'firebase/firestore';
import { db } from './firebase';
import { useTranslation } from 'react-i18next';
import DesignerCardBackground from './DesignerCardBackground';

function Home() {
  const { i18n } = useTranslation();
  const [isVisible, setIsVisible] = useState(false);
  const navigate = useNavigate();
  const [selectedFeature, setSelectedFeature] = useState(null);
  const [localAds, setLocalAds] = useState([]);
  const [alert, setAlert] = useState(null);
  const [showAlert, setShowAlert] = useState(true);

  useEffect(() => {
    setIsVisible(true);
    // Fetch approved local ads
    async function fetchLocalAds() {
      const q = query(collection(db, 'local_ads'), where('status', '==', 'approved'));
      const snap = await getDocs(q);
      setLocalAds(snap.docs.map(doc => ({ id: doc.id, ...doc.data() })));
    }
    fetchLocalAds();

    fetch('/api/news/alerts')
      .then(res => res.json())
      .then(data => {
        if (data.alerts && data.alerts.length > 0) {
          setAlert(data.alerts[0]);
          setShowAlert(true);
        }
      });
  }, []);

  useEffect(() => {
    if (window.adsbygoogle && Array.isArray(window.adsbygoogle)) {
      window.adsbygoogle.push({});
    }
  }, []);

  const stats = [
    {
      icon: 'ЁЯСе',
      number: '2,500+',
      label: i18n.language === 'hi' ? 'рдХреБрд▓ рдЬрдирд╕рдВрдЦреНрдпрд╛' : 'Total Population',
      subtitle: i18n.language === 'hi' ? '400+ рдкрд░рд┐рд╡рд╛рд░' : '400+ Families',
      color: 'from-primary-500 to-primary-600'
    },
    {
      icon: 'ЁЯПл',
      number: '2',
      label: i18n.language === 'hi' ? 'рд╕рд░рдХрд╛рд░реА рд╕реНрдХреВрд▓' : 'Government Schools',
      subtitle: i18n.language === 'hi' ? '500+ рдЫрд╛рддреНрд░' : '500+ Students',
      color: 'from-accent-500 to-accent-600'
    },
    {
      icon: 'ЁЯМ╛',
      number: '150',
      label: i18n.language === 'hi' ? 'рд╣реЗрдХреНрдЯреЗрдпрд░ рдХреГрд╖рд┐ рднреВрдорд┐' : 'Hectares Farmland',
      subtitle: i18n.language === 'hi' ? 'рдореБрдЦреНрдп рдлрд╕рд▓реЗрдВ' : 'Main Crops',
      color: 'from-secondary-500 to-secondary-600'
    },
    {
      icon: 'ЁЯЫХ',
      number: '3',
      label: i18n.language === 'hi' ? 'рдкреНрд░рд╛рдЪреАрди рдордВрджрд┐рд░' : 'Ancient Temples',
      subtitle: i18n.language === 'hi' ? '100+ рд╡рд░реНрд╖ рдкреБрд░рд╛рдиреЗ' : '100+ Years Old',
      color: 'from-orange-400 via-yellow-300 to-red-500'
    }
  ];

  const features = [
    {
      icon: 'ЁЯОн',
      title: i18n.language === 'hi' ? 'рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рдд' : 'Cultural Heritage',
      description: i18n.language === 'hi' ? 'рд╕рдореГрджреНрдз рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рдкрд░рдВрдкрд░рд╛рдПрдБ рдФрд░ рддреНрдпреЛрд╣рд╛рд░' : 'Rich cultural traditions and festivals',
      color: 'primary',
      details: {
        hi: 'рдмреИрд░рд┐рдпрд╛рдбреАрд╣ рдЧрд╛рдБрд╡ рдореЗрдВ рдЫрда, рд╣реЛрд▓реА, рджреАрдкрд╛рд╡рд▓реА, рдФрд░ рдЕрдиреНрдп рддреНрдпреЛрд╣рд╛рд░ рдкреВрд░реЗ рдЙрддреНрд╕рд╛рд╣ рдХреЗ рд╕рд╛рде рдордирд╛рдП рдЬрд╛рддреЗ рд╣реИрдВред рдпрд╣рд╛рдБ рдХреА рд╕рд╛рдВрд╕реНрдХреГрддрд┐рдХ рд╡рд┐рд░рд╛рд╕рдд рдореЗрдВ рдкрд╛рд░рдВрдкрд░рд┐рдХ рдиреГрддреНрдп, рд▓реЛрдХрдЧреАрдд, рдФрд░ рдореЗрд▓реЛрдВ рдХрд╛ рд╡рд┐рд╢реЗрд╖ рд╕реНрдерд╛рди рд╣реИред рдЧрд╛рдБрд╡ рдХреЗ рд▓реЛрдЧ рдЕрдкрдиреА рдкрд░рдВрдкрд░рд╛рдУрдВ рдХреЛ рдЖрдЬ рднреА рдЬреАрд╡рд┐рдд рд░рдЦрддреЗ рд╣реИрдВред',
        en: 'Bairiyadih village celebrates festivals like Chhath, Holi, Diwali, and more with great enthusiasm. The cultural heritage includes traditional dances, folk songs, and fairs. Villagers actively preserve and participate in these traditions.'
      }
    },
    {
      icon: 'ЁЯОУ',
      title: i18n.language === 'hi' ? 'рд╢реИрдХреНрд╖рд┐рдХ рдЙрддреНрдХреГрд╖реНрдЯрддрд╛' : 'Educational Excellence',
      description: i18n.language === 'hi' ? 'рдЙрдЪреНрдЪ рдЧреБрдгрд╡рддреНрддрд╛ рд╡рд╛рд▓реА рд╢рд┐рдХреНрд╖рд╛ рдФрд░ рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐рдпрд╛рдБ' : 'High-quality education and scholarships',
      color: 'accent',
      details: {
        hi: 'рдЧрд╛рдБрд╡ рдореЗрдВ рджреЛ рд╕рд░рдХрд╛рд░реА рд╕реНрдХреВрд▓ рд╣реИрдВ рдЬрд╣рд╛рдБ 500+ рдЫрд╛рддреНрд░ рдкрдврд╝рддреЗ рд╣реИрдВред рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐ рдпреЛрдЬрдирд╛рдУрдВ рдФрд░ рдкреНрд░рддрд┐рдпреЛрдЧреА рдкрд░реАрдХреНрд╖рд╛рдУрдВ рдХреЗ рд▓рд┐рдП рдорд╛рд░реНрдЧрджрд░реНрд╢рди рднреА рдЙрдкрд▓рдмреНрдз рд╣реИред рд╢рд┐рдХреНрд╖рд╛ рдХреЗ рдХреНрд╖реЗрддреНрд░ рдореЗрдВ рдЧрд╛рдБрд╡ рдХреЗ рдХрдИ рдЫрд╛рддреНрд░-рдЫрд╛рддреНрд░рд╛рдУрдВ рдиреЗ рдЬрд┐рд▓реЗ рдФрд░ рд░рд╛рдЬреНрдп рд╕реНрддрд░ рдкрд░ рдирд╛рдо рд░реЛрд╢рди рдХрд┐рдпрд╛ рд╣реИред',
        en: 'The village has two government schools with over 500 students. Guidance for scholarships and competitive exams is available. Many students from the village have excelled at district and state levels.'
      }
    },
    {
      icon: 'ЁЯМ╛',
      title: i18n.language === 'hi' ? 'рдХреГрд╖рд┐ рд╡рд┐рдХрд╛рд╕' : 'Agricultural Development',
      description: i18n.language === 'hi' ? 'рдЖрдзреБрдирд┐рдХ рдХреГрд╖рд┐ рддрдХрдиреАрдХ рдФрд░ рд╕рд┐рдВрдЪрд╛рдИ' : 'Modern farming techniques and irrigation',
      color: 'secondary',
      details: {
        hi: 'рдЧрд╛рдБрд╡ рдореЗрдВ 150 рд╣реЗрдХреНрдЯреЗрдпрд░ рд╕реЗ рдЕрдзрд┐рдХ рднреВрдорд┐ рдкрд░ рдЦреЗрддреА рд╣реЛрддреА рд╣реИред рдХрд┐рд╕рд╛рди рдЖрдзреБрдирд┐рдХ рдХреГрд╖рд┐ рддрдХрдиреАрдХреЛрдВ, рдЙрдиреНрдирдд рдмреАрдЬ, рдФрд░ рд╕рд┐рдВрдЪрд╛рдИ рдХреЗ рд╕рд╛рдзрдиреЛрдВ рдХрд╛ рдЙрдкрдпреЛрдЧ рдХрд░рддреЗ рд╣реИрдВред рдореБрдЦреНрдп рдлрд╕рд▓реЗрдВ рдЧреЗрд╣реВрдВ, рдзрд╛рди, рдордХреНрдХрд╛ рдЖрджрд┐ рд╣реИрдВред рдХреГрд╖рд┐ рдореЗрд▓реЛрдВ рдФрд░ рдкреНрд░рд╢рд┐рдХреНрд╖рдг рд╢рд┐рд╡рд┐рд░реЛрдВ рдХрд╛ рдЖрдпреЛрдЬрди рднреА рд╣реЛрддрд╛ рд╣реИред',
        en: 'Over 150 hectares of land is cultivated in the village. Farmers use modern techniques, improved seeds, and irrigation. Main crops include wheat, rice, and maize. Agricultural fairs and training camps are also organized.'
      }
    },
    {
      icon: 'ЁЯПе',
      title: i18n.language === 'hi' ? 'рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛рдПрдБ' : 'Healthcare Services',
      description: i18n.language === 'hi' ? 'рдмреЗрд╣рддрд░ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реБрд╡рд┐рдзрд╛рдПрдБ рдФрд░ рдЬрд╛рдЧрд░реВрдХрддрд╛' : 'Better health facilities and awareness',
      color: 'primary',
      details: {
        hi: 'рдЧрд╛рдБрд╡ рдореЗрдВ рдкреНрд░рд╛рдердорд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рдХреЗрдВрджреНрд░ рд╣реИ рдЬрд╣рд╛рдБ рдирд┐рдпрдорд┐рдд рд░реВрдк рд╕реЗ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╢рд┐рд╡рд┐рд░, рдЯреАрдХрд╛рдХрд░рдг, рдФрд░ рдЬрди-рдЬрд╛рдЧрд░реВрдХрддрд╛ рдХрд╛рд░реНрдпрдХреНрд░рдо рдЪрд▓рддреЗ рд╣реИрдВред рдЖрдкрд╛рддрдХрд╛рд▓реАрди рд╕реЗрд╡рд╛рдУрдВ рдХреЗ рд▓рд┐рдП рдирдЬрджреАрдХреА рдЕрд╕реНрдкрддрд╛рд▓ рднреА рдЙрдкрд▓рдмреНрдз рд╣реИред',
        en: 'The village has a primary health center with regular health camps, vaccination drives, and awareness programs. Nearby hospitals are available for emergencies.'
      }
    }
  ];

  // Earning opportunities data
  const earningWays = [
    {
      icon: 'ЁЯТ╗',
      title: i18n.language === 'hi' ? 'рдСрдирд▓рд╛рдЗрди рдлреНрд░реАрд▓рд╛рдВрд╕рд┐рдВрдЧ' : 'Online Freelancing',
      description: i18n.language === 'hi' ? 'Upwork, Fiverr, Freelancer рдЬреИрд╕реА рд╡реЗрдмрд╕рд╛рдЗрдЯреЛрдВ рдкрд░ рдХрд╛рдо рдХрд░реЗрдВ' : 'Work on sites like Upwork, Fiverr, Freelancer',
    },
    {
      icon: 'ЁЯУ▒',
      title: i18n.language === 'hi' ? 'рдореЛрдмрд╛рдЗрд▓ рдРрдкреНрд╕ рд╕реЗ рдХрдорд╛рдИ' : 'Earning from Mobile Apps',
      description: i18n.language === 'hi' ? 'YouTube, Instagram, ShareChat, Josh рдЖрджрд┐ рдкрд░ рд╡реАрдбрд┐рдпреЛ рдмрдирд╛рдПрдВ' : 'Create videos on YouTube, Instagram, ShareChat, Josh, etc.',
    },
    {
      icon: 'ЁЯПв',
      title: i18n.language === 'hi' ? 'рд╕рд░рдХрд╛рд░реА рдпреЛрдЬрдирд╛рдПрдБ' : 'Government Schemes',
      description: i18n.language === 'hi' ? 'рдордирд░реЗрдЧрд╛, рд╕реНрд╡рд░реЛрдЬрдЧрд╛рд░, PMEGP, рд╕реНрд╡рд░реЛрдЬрдЧрд╛рд░ рдпреЛрдЬрдирд╛рдПрдБ' : 'MGNREGA, Self-employment, PMEGP, government schemes',
    },
    {
      icon: 'ЁЯзСтАНЁЯМ╛',
      title: i18n.language === 'hi' ? 'рдХреГрд╖рд┐ рдЖрдзрд╛рд░рд┐рдд рдХрдорд╛рдИ' : 'Agriculture-based Earning',
      description: i18n.language === 'hi' ? 'рдлрд╕рд▓ рдмреЗрдЪреЗрдВ, рдкрд╢реБрдкрд╛рд▓рди, рдордзреБрдордХреНрдЦреА рдкрд╛рд▓рди, рдорддреНрд╕реНрдп рдкрд╛рд▓рди' : 'Sell crops, animal husbandry, beekeeping, fishery',
    },
    {
      icon: 'ЁЯз╡',
      title: i18n.language === 'hi' ? 'рд╣рд╕реНрддрд╢рд┐рд▓реНрдк рдФрд░ рдХреБрдЯреАрд░ рдЙрджреНрдпреЛрдЧ' : 'Handicrafts & Cottage Industries',
      description: i18n.language === 'hi' ? 'рд╣рд╕реНрддрд╢рд┐рд▓реНрдк, рд╕рд┐рд▓рд╛рдИ, рдмреБрдирд╛рдИ, рдЕрдЧрд░рдмрддреНрддреА, рдореЛрдордмрддреНрддреА рдмрдирд╛рдирд╛' : 'Handicrafts, tailoring, weaving, incense/candle making',
    },
    {
      icon: 'ЁЯзСтАНЁЯПл',
      title: i18n.language === 'hi' ? 'рд╢рд┐рдХреНрд╖рд╛/рдЯреНрдпреВрд╢рди' : 'Education/Tuition',
      description: i18n.language === 'hi' ? 'рдмрдЪреНрдЪреЛрдВ рдХреЛ рдЯреНрдпреВрд╢рди рдкрдврд╝рд╛рдПрдВ рдпрд╛ рдСрдирд▓рд╛рдЗрди рдХреЛрд░реНрд╕ рдмрдирд╛рдПрдВ' : 'Teach tuition or create online courses',
    },
    {
      icon: 'ЁЯЫТ',
      title: i18n.language === 'hi' ? 'рд╕реНрдерд╛рдиреАрдп рд╡реНрдпрд╛рдкрд╛рд░' : 'Local Business',
      description: i18n.language === 'hi' ? 'рджреБрдХрд╛рди, рд╕рд░реНрд╡рд┐рд╕ рд╕реЗрдВрдЯрд░, рдореЛрдмрд╛рдЗрд▓ рд░рд┐рдкреЗрдпрд░рд┐рдВрдЧ, рдЖрджрд┐' : 'Shop, service center, mobile repairing, etc.',
    },
    {
      icon: 'ЁЯЪЪ',
      title: i18n.language === 'hi' ? 'рдбрд┐рд▓реАрд╡рд░реА/рдбреНрд░рд╛рдЗрд╡рд░ рдЬреЙрдмреНрд╕' : 'Delivery/Driver Jobs',
      description: i18n.language === 'hi' ? 'рдСрдирд▓рд╛рдЗрди рдбрд┐рд▓реАрд╡рд░реА, рдЯреИрдХреНрд╕реА, рдЯреНрд░рдХ рдбреНрд░рд╛рдЗрд╡рд░, рдЖрджрд┐' : 'Online delivery, taxi, truck driver, etc.',
    },
  ];

  const quickLinks = [
    { to: '/about', icon: 'тД╣я╕П', label: 'About Village' },
    { to: '/people', icon: 'ЁЯСе', label: 'Villagers' },
    { to: '/education', icon: 'ЁЯОУ', label: 'Education' },
    { to: '/health', icon: 'ЁЯПе', label: 'Health' },
    { to: '/agriculture', icon: 'ЁЯМ╛', label: 'Agriculture' },
    { to: '/panchayat', icon: 'ЁЯПЫя╕П', label: 'Panchayat' },
    { to: '/gallery', icon: 'ЁЯУ╕', label: 'Gallery' },
    { to: '/news', icon: 'ЁЯУ░', label: 'News' },
    { to: '/contact', icon: 'ЁЯУЮ', label: 'Contact' }
  ];

  return (
    <div className="min-h-screen">
      {/* Emergency Alert Banner */}
      {alert && showAlert && (
        <div className="w-full bg-gradient-to-r from-red-700 via-red-500 to-yellow-400 text-white py-3 px-4 flex items-center justify-between font-bold text-lg shadow-lg z-50 fixed top-0 left-0 right-0 animate-pulse font-[Noto Sans Devanagari, Mangal, Arial, sans-serif]">
          <div className="flex items-center gap-3">
            <span className="bg-red-900 text-white px-3 py-1 rounded-full text-xs mr-2 animate-bounce">{i18n.language === 'hi' ? 'рдмреНрд░реЗрдХрд┐рдВрдЧ' : 'Breaking'}</span>
            <span className="truncate max-w-[60vw]">{alert.title}</span>
          </div>
          <button onClick={() => setShowAlert(false)} className="ml-4 text-white text-2xl font-bold hover:text-yellow-200 focus:outline-none">├Ч</button>
        </div>
      )}
      <div className={alert && showAlert ? 'pt-16' : ''}>
      {/* --- AdSense Top Banner --- */}
      <div className="w-full flex justify-center my-4">
        <ins className="adsbygoogle"
          style={{ display: 'block', width: '100%', minHeight: 90 }}
          data-ad-client="ca-pub-5491585361894419"
          data-ad-slot="1234567890"
          data-ad-format="auto"
          data-full-width-responsive="true"
        ></ins>
      </div>

      {/* Hero Section */}
      <section className="relative flex flex-col items-center justify-center min-h-[60vh] py-12 px-4 bg-gradient-to-br from-green-200 via-yellow-100 to-orange-200 overflow-hidden rounded-b-3xl shadow-xl">
        {/* Radial light effect behind heading */}
        <div className="absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 w-[420px] h-[220px] bg-yellow-100 rounded-full blur-3xl opacity-60 z-0" />
        {/* Animated SVG rural motif */}
        <div className="absolute bottom-0 left-0 w-full flex justify-center pointer-events-none z-0">
          <svg width="320" height="60" viewBox="0 0 320 60" fill="none" xmlns="http://www.w3.org/2000/svg" className="animate-pulse-slow">
            <ellipse cx="160" cy="50" rx="150" ry="10" fill="#FDE68A" fillOpacity="0.5" />
            <ellipse cx="160" cy="55" rx="120" ry="7" fill="#F59E42" fillOpacity="0.3" />
            <ellipse cx="160" cy="58" rx="90" ry="4" fill="#A7F3D0" fillOpacity="0.3" />
            {/* Sun motif */}
            <circle cx="280" cy="20" r="18" fill="#FDE047" opacity="0.5" />
            {/* Leaf motif */}
            <path d="M40 55 Q50 40 60 55" stroke="#22C55E" strokeWidth="3" fill="none" opacity="0.5" />
          </svg>
        </div>
        {/* Animated Sun with Rays */}
        <div className="absolute top-6 right-10 md:right-24 z-0 animate-spin-slow">
          <svg width="90" height="90" viewBox="0 0 90 90" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="45" cy="45" r="18" fill="#FDE047" />
            <g stroke="#FACC15" strokeWidth="3">
              <line x1="45" y1="5" x2="45" y2="25" />
              <line x1="45" y1="65" x2="45" y2="85" />
              <line x1="5" y1="45" x2="25" y2="45" />
              <line x1="65" y1="45" x2="85" y2="45" />
              <line x1="20" y1="20" x2="32" y2="32" />
              <line x1="58" y1="58" x2="70" y2="70" />
              <line x1="20" y1="70" x2="32" y2="58" />
              <line x1="58" y1="32" x2="70" y2="20" />
            </g>
          </svg>
        </div>
        {/* Animated Clouds */}
        <div className="absolute top-10 left-4 z-0 animate-cloud-move-slow">
          <svg width="80" height="32" viewBox="0 0 80 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <ellipse cx="30" cy="20" rx="30" ry="12" fill="#fff" fillOpacity="0.7" />
            <ellipse cx="60" cy="16" rx="20" ry="8" fill="#fff" fillOpacity="0.5" />
          </svg>
        </div>
        <div className="absolute top-20 left-1/2 -translate-x-1/2 z-0 animate-cloud-move-slower">
          <svg width="100" height="36" viewBox="0 0 100 36" fill="none" xmlns="http://www.w3.org/2000/svg">
            <ellipse cx="50" cy="18" rx="40" ry="14" fill="#fff" fillOpacity="0.5" />
            <ellipse cx="80" cy="12" rx="18" ry="7" fill="#fff" fillOpacity="0.3" />
          </svg>
        </div>
        {/* Foreground SVG fields/huts silhouette */}
        <div className="absolute bottom-0 left-0 w-full flex justify-center pointer-events-none z-0">
          <svg width="100%" height="60" viewBox="0 0 320 60" fill="none" xmlns="http://www.w3.org/2000/svg">
            <ellipse cx="160" cy="50" rx="150" ry="10" fill="#FDE68A" fillOpacity="0.5" />
            <ellipse cx="160" cy="55" rx="120" ry="7" fill="#F59E42" fillOpacity="0.3" />
            <ellipse cx="160" cy="58" rx="90" ry="4" fill="#A7F3D0" fillOpacity="0.3" />
            {/* Hut silhouette */}
            <rect x="60" y="38" width="22" height="12" fill="#B45309" />
            <polygon points="71,28 56,38 86,38" fill="#F59E42" />
            {/* Tree silhouette */}
            <rect x="240" y="40" width="6" height="10" fill="#166534" />
            <ellipse cx="243" cy="40" rx="10" ry="8" fill="#4ADE80" />
          </svg>
        </div>
        {/* Glassmorphism Card for Heading/Tagline */}
        <div className="relative z-10 flex flex-col items-center w-full max-w-2xl mx-auto bg-white/40 backdrop-blur-md rounded-2xl shadow-lg py-8 px-4 md:px-10 border border-white/30">
          <h1 className={`text-4xl lg:text-6xl font-extrabold font-display mb-6 gradient-text text-center ${i18n.language === 'hi' ? 'hindi-heading' : 'english-heading'}`}>
            <span>
              {i18n.language === 'hi' ? 'рдмреИрд░рд┐рдпрд╛рдбреАрд╣ рдЧрд╛рдБрд╡' : 'Bairiyadih Village'}
                </span>
          </h1>
          <p className="text-xl lg:text-2xl text-neutral-700 max-w-3xl text-center mb-4 font-medium">
            {i18n.language === 'hi'
              ? 'рдбрд┐рдЬрд┐рдЯрд▓ рдЧреНрд░рд╛рдо рдкрдВрдЪрд╛рдпрдд рдФрд░ рд╕рдореБрджрд╛рдп рдкреЛрд░реНрдЯрд▓ - рдЧрд╛рдБрд╡рд╡рд╛рд╕рд┐рдпреЛрдВ, рдкрд░реНрдпрдЯрдХреЛрдВ, рд╕рдорд╛рдЬрд╕реЗрд╡рд┐рдпреЛрдВ рдФрд░ рдЫрд╛рддреНрд░реЛрдВ рдХреЗ рд▓рд┐рдП'
              : 'Digital Gram Panchayat & Community Portal for villagers, visitors, social workers, and students'}
          </p>
          <div className="flex flex-col md:flex-row items-center gap-4 mb-6">
            <div className="flex items-center gap-2 text-lg text-neutral-800">
              <span className="text-2xl">ЁЯУН</span>
              {i18n.language === 'hi' ? 'рдерд╛рдирд╛ - рд╣рд░рд╕рд┐рджреНрдзрд┐, рдмрд┐рд╣рд╛рд░, рднрд╛рд░рдд' : 'Thana - Harsidhi, Bihar, India'}
            </div>
            <div className="hidden md:block h-6 w-px bg-gradient-to-b from-green-400 to-orange-400 mx-2" />
            <div className="flex items-center gap-2 text-lg text-neutral-800">
              <span className="text-2xl">ЁЯПв</span>
              {i18n.language === 'hi' ? 'рдЬрд┐рд▓рд╛: рдкреВрд░реНрд╡реА рдЪрдВрдкрд╛рд░рдг, рдкрд┐рдирдХреЛрдб: 845435' : 'District: East Champaran, Pincode: 845435'}
            </div>
          </div>
          <div className="flex flex-wrap gap-4 justify-center mt-2">
            <button
              onClick={() => navigate('/about')}
              className="px-6 py-2 rounded-full bg-gradient-to-r from-green-400 to-pink-400 text-white font-semibold flex items-center gap-2 shadow-lg hover:scale-105 transition-transform duration-200 focus:outline-none"
            >
              <span className="text-xl">тД╣я╕П</span> {i18n.language === 'hi' ? 'рдЧрд╛рдБрд╡ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдЬрд╛рдиреЗрдВ' : 'About the Village'}
            </button>
            <button
              onClick={() => navigate('/contact')}
              className="px-6 py-2 rounded-full bg-gradient-to-r from-yellow-400 to-orange-400 text-white font-semibold flex items-center gap-2 shadow-lg hover:scale-105 transition-transform duration-200 focus:outline-none"
            >
              <span className="text-xl">ЁЯУЮ</span> {i18n.language === 'hi' ? 'рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВ' : 'Contact'}
            </button>
          </div>
        </div>
      </section>

      {/* Accent Divider */}
      <div className="w-full flex justify-center my-8">
        <div className="h-1 w-32 bg-gradient-to-r from-green-400 via-yellow-400 to-orange-400 rounded-full shadow-md" />
      </div>

      {/* Stats Section */}
      <section className="max-w-5xl mx-auto mb-12 px-4">
        <h2 className={`text-2xl lg:text-3xl font-bold text-center mb-6 gradient-text ${i18n.language === 'hi' ? 'hindi-heading' : ''}`}>
          {i18n.language === 'hi' ? 'рдЧрд╛рдБрд╡ рд╕рд╛рдВрдЦреНрдпрд┐рдХреА' : 'Village Statistics'}
            </h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6">
          {stats.map((stat, idx) => (
            <div
              key={idx}
              className={`bg-gradient-to-br ${stat.color} rounded-2xl shadow-xl p-6 flex flex-col items-center hover:scale-105 transition-transform duration-200`}
            >
              <span className="text-4xl mb-2 drop-shadow-lg">{stat.icon}</span>
              <div className="text-2xl font-bold text-white mb-1 drop-shadow">{stat.number}</div>
              <div className="text-lg font-semibold text-white mb-1 text-center drop-shadow">{stat.label}</div>
              <div className="text-sm text-white/90 text-center">{stat.subtitle}</div>
            </div>
            ))}
            </div>
      </section>

      {/* Accent Divider */}
      <div className="w-full flex justify-center my-8">
        <div className="h-1 w-32 bg-gradient-to-r from-pink-400 via-yellow-400 to-green-400 rounded-full shadow-md" />
      </div>

      {/* Features Section */}
      <section className="py-16 px-4 sm:px-6 lg:px-8 bg-gradient-to-br from-white/50 to-primary-50/30">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-12">
            <h2 className={`text-3xl lg:text-4xl font-bold font-display mb-4 ${i18n.language === 'hi' ? 'hindi-text' : ''}`}>
              <span className="gradient-text">
                {i18n.language === 'hi' ? 'рдЧрд╛рдБрд╡ рдХреА рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ' : 'Village Features'}
              </span>
            </h2>
            <p className="text-lg text-black max-w-2xl mx-auto">
              {i18n.language === 'hi' ? 'рдЧрд╛рдБрд╡ рдХреА рдореБрдЦреНрдп рд╡рд┐рд╢реЗрд╖рддрд╛рдПрдВ рдФрд░ рд╕реЗрд╡рд╛рдПрдВ' : 'Key features and services of our village'}
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {features.map((feature, index) => (
              index === 0 ? (
                <DesignerCardBackground key={index} variant="home" className="cursor-pointer" onClick={() => setSelectedFeature(feature)}>
                  <div className={`w-16 h-16 rounded-full flex items-center justify-center mb-4 bg-gradient-to-br from-${feature.color}-200 via-yellow-100 to-${feature.color}-100 shadow-md group-hover:scale-110 transition-transform duration-200 z-10`}>
                    <span className="text-4xl">{feature.icon}</span>
                  </div>
                  <h3 className={`text-xl font-bold text-neutral-900 mb-3 drop-shadow-sm z-10 ${i18n.language === 'hi' ? 'hindi-text' : ''}`}>{feature.title}</h3>
                  <p className="text-neutral-700 leading-relaxed text-center z-10">{feature.description}</p>
                </DesignerCardBackground>
              ) : (
              <div
                key={index}
                  className={`relative bg-gradient-to-br from-green-50 via-yellow-50 to-amber-50 bg-white/70 backdrop-blur-lg border-2 border-green-400 rounded-3xl shadow-xl shadow-green-200/40 p-7 flex flex-col items-center hover:-translate-y-2 hover:shadow-green-300/60 hover:shadow-2xl transition-transform duration-200 group`}
                  style={{ minHeight: '260px' }}
                onClick={() => setSelectedFeature(feature)}
              >
                  {/* Animated sheen overlay */}
                  <div className="absolute inset-0 pointer-events-none z-0">
                    <div className="absolute left-0 top-0 w-full h-full animate-sheen" style={{ background: 'linear-gradient(120deg, transparent 60%, rgba(255,255,255,0.18) 80%, transparent 100%)' }} />
                  </div>
                  {/* Dots + wavy pattern overlay */}
                  <div className="absolute inset-0 pointer-events-none opacity-10 z-0">
                    <svg width="100%" height="100%" viewBox="0 0 120 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <defs>
                        <pattern id="dots2" x="0" y="0" width="10" height="10" patternUnits="userSpaceOnUse">
                          <circle cx="1" cy="1" r="1" fill="#22C55E" />
                        </pattern>
                      </defs>
                      <rect width="120" height="60" fill="url(#dots2)" />
                      <path d="M0 50 Q30 40 60 50 T120 50" stroke="#F59E42" strokeWidth="2" fill="none" opacity="0.15" />
                    </svg>
                  </div>
                  <div className={`w-16 h-16 rounded-full flex items-center justify-center mb-4 bg-gradient-to-br from-${feature.color}-200 via-yellow-100 to-${feature.color}-100 shadow-md group-hover:scale-110 transition-transform duration-200 z-10`}>
                    <span className="text-4xl">{feature.icon}</span>
                  </div>
                  <h3 className={`text-xl font-bold text-neutral-900 mb-3 drop-shadow-sm z-10 ${i18n.language === 'hi' ? 'hindi-text' : ''}`}>{feature.title}</h3>
                  <p className="text-neutral-700 leading-relaxed text-center z-10">{feature.description}</p>
                </div>
              )
            ))}
          </div>

          {/* Feature Details Modal */}
          {selectedFeature && (
            <div className="fixed inset-0 z-50 flex items-center justify-center bg-black/40">
              <div className="bg-white rounded-2xl shadow-2xl max-w-md w-full p-8 relative animate-fadein">
                <button
                  className="absolute top-3 right-3 text-2xl text-gray-400 hover:text-gray-700 focus:outline-none"
                  onClick={() => setSelectedFeature(null)}
                  aria-label="Close"
                >
                  ├Ч
                </button>
                <div className="flex flex-col items-center">
                  <div className={`w-16 h-16 mb-4 flex items-center justify-center rounded-xl bg-gradient-to-br from-${selectedFeature.color}-500 to-${selectedFeature.color}-600`}>
                    <span className="text-3xl">{selectedFeature.icon}</span>
                  </div>
                  <h3 className={`text-2xl font-bold text-neutral-800 mb-2 text-center ${i18n.language === 'hi' ? 'hindi-text' : ''}`}>{selectedFeature.title}</h3>
                  <p className="text-neutral-700 text-center mb-2">
                    {selectedFeature.details
                      ? selectedFeature.details[i18n.language] || selectedFeature.details.en
                      : selectedFeature.description}
                  </p>
                  {/* Future: Add more details here if needed */}
                </div>
              </div>
            </div>
          )}
        </div>
      </section>

      {/* Accent Divider */}
      <div className="w-full flex justify-center my-8">
        <div className="h-1 w-32 bg-gradient-to-r from-blue-400 via-yellow-400 to-pink-400 rounded-full shadow-md" />
      </div>

      {/* Earning Opportunities Section */}
      <section className="max-w-5xl mx-auto mt-12 mb-16 px-4">
        <h2 className={`text-2xl lg:text-3xl font-bold text-center mb-6 gradient-text ${i18n.language === 'hi' ? 'hindi-heading' : ''}`}>
          {i18n.language === 'hi' ? 'рдХрдорд╛рдИ рдХреЗ рдЕрд╡рд╕рд░' : 'Earning Opportunities'}
        </h2>
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
          {earningWays.map((way, idx) => (
            <div
              key={idx}
              className="relative bg-gradient-to-br from-yellow-100 via-orange-50 to-yellow-200 border-2 border-yellow-300 rounded-2xl shadow-2xl p-7 flex flex-col items-center transition-transform duration-200 hover:-translate-y-2 hover:shadow-yellow-400/60 hover:shadow-2xl group"
              style={{ minHeight: '270px' }}
            >
              <span className="text-5xl mb-4 drop-shadow-lg group-hover:scale-110 transition-transform duration-200">
                {way.icon}
              </span>
              <h3 className={`text-xl font-bold mb-2 text-center text-orange-900 drop-shadow-sm ${i18n.language === 'hi' ? 'hindi-text' : ''}`}>{way.title}</h3>
              <p className="text-black text-center text-sm mb-6">{way.description}</p>
              <button
                className="mt-auto px-4 py-1.5 rounded-full bg-gradient-to-r from-green-400 to-orange-400 text-white font-semibold shadow-md hover:scale-105 hover:from-orange-400 hover:to-green-400 transition-all duration-200 focus:outline-none"
                style={{ fontSize: '0.95rem' }}
              >
                {i18n.language === 'hi' ? 'рдФрд░ рдЬрд╛рдиреЗрдВ' : 'Learn More'}
              </button>
            </div>
          ))}
        </div>
      </section>

      {/* Accent Divider */}
      <div className="w-full flex justify-center my-8">
        <div className="h-1 w-32 bg-gradient-to-r from-purple-400 via-blue-400 to-green-400 rounded-full shadow-md" />
      </div>

      {/* Village Services Section - above Quick Links */}
      <section className="relative py-16 px-4 sm:px-6 lg:px-8 overflow-hidden rounded-3xl shadow-lg my-12 bg-gradient-to-br from-blue-50 via-green-50 to-yellow-100">
        {/* Radial light effect behind heading */}
        <div className="absolute top-16 left-1/2 -translate-x-1/2 w-[420px] h-[180px] bg-blue-100 rounded-full blur-3xl opacity-50 z-0" />
        {/* Subtle animated SVG digital motif in background */}
        <div className="absolute bottom-8 right-8 opacity-20 z-0 animate-pulse-slow">
          <svg width="100" height="60" viewBox="0 0 100 60" fill="none" xmlns="http://www.w3.org/2000/svg">
            <rect x="10" y="30" width="80" height="8" rx="4" fill="#38BDF8" fillOpacity="0.18" />
            <circle cx="20" cy="34" r="4" fill="#22D3EE" fillOpacity="0.25" />
            <circle cx="80" cy="34" r="4" fill="#A7F3D0" fillOpacity="0.25" />
            <rect x="40" y="10" width="20" height="8" rx="4" fill="#F59E42" fillOpacity="0.18" />
            <rect x="48" y="18" width="4" height="12" rx="2" fill="#F59E42" fillOpacity="0.18" />
          </svg>
        </div>
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-12">
            <h2 className="text-3xl lg:text-4xl font-bold font-display mb-2">
              <span className="gradient-text">
                {i18n.language === 'hi' ? 'рдЧрд╛рдБрд╡рд╡рд╛рд╕рд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдбрд┐рдЬрд┐рдЯрд▓ рд╕реЗрд╡рд╛рдПрдВ' : 'Digital Services for Villagers'}
              </span>
            </h2>
            <p className="text-base text-neutral-600 max-w-2xl mx-auto">
              {i18n.language === 'hi' ? 'рд╕рднреА рдЧрд╛рдБрд╡рд╡рд╛рд╕рд┐рдпреЛрдВ рдХреЗ рд▓рд┐рдП рдЙрдкрдпреЛрдЧреА рдФрд░ рд╕рд░рдХрд╛рд░реА рд╕реЗрд╡рд╛рдПрдВ' : 'Useful and government services for all villagers'}
            </p>
          </div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-8 relative z-10">
            {/* Ration Card Status Card */}
            <div
              className="relative cursor-pointer bg-gradient-to-br from-blue-50 via-green-50 to-white border-2 border-blue-400 rounded-3xl shadow-xl shadow-blue-200/40 p-7 flex flex-col items-center hover:-translate-y-2 hover:shadow-blue-300/60 hover:shadow-2xl transition-transform duration-200 group"
              onClick={() => navigate('/ration-card-status')}
            >
              {/* Animated sheen overlay */}
              <div className="absolute inset-0 pointer-events-none z-0">
                <div className="absolute left-0 top-0 w-full h-full animate-sheen" style={{ background: 'linear-gradient(120deg, transparent 60%, rgba(255,255,255,0.18) 80%, transparent 100%)' }} />
              </div>
              {/* Dots + wavy pattern overlay */}
              <div className="absolute inset-0 pointer-events-none opacity-10 z-0">
                <svg width="100%" height="100%" viewBox="0 0 120 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <defs>
                    <pattern id="dots3" x="0" y="0" width="10" height="10" patternUnits="userSpaceOnUse">
                      <circle cx="1" cy="1" r="1" fill="#38BDF8" />
                    </pattern>
                  </defs>
                  <rect width="120" height="60" fill="url(#dots3)" />
                  <path d="M0 50 Q30 40 60 50 T120 50" stroke="#22D3EE" strokeWidth="2" fill="none" opacity="0.15" />
                </svg>
              </div>
              {/* Digital motif (wifi/circuit) at bottom-right */}
              <div className="absolute bottom-3 right-3 opacity-20 z-0">
                <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="18" cy="18" r="16" stroke="#38BDF8" strokeWidth="2" fill="none" />
                  <path d="M10 24 Q18 14 26 24" stroke="#22D3EE" strokeWidth="2" fill="none" />
                  <circle cx="18" cy="24" r="2" fill="#22D3EE" />
                </svg>
              </div>
              <div className="w-14 h-14 rounded-full flex items-center justify-center mb-3 bg-gradient-to-br from-blue-200 via-green-100 to-white shadow-md group-hover:scale-110 transition-transform duration-200 z-10">
                <span className="text-3xl">ЁЯз╛</span>
              </div>
              <h3 className="text-lg font-bold text-blue-900 mb-1 drop-shadow-sm z-10">
                {i18n.language === 'hi' ? 'рднреЛрдЬрди рдХрд╛рд░реНрдб рд╕реНрдерд┐рддрд┐' : 'Ration Card Status'}
              </h3>
              <p className="text-black text-center text-sm z-10">
                {i18n.language === 'hi' ? 'рдЕрдкрдирд╛ рднреЛрдЬрди рдХрд╛рд░реНрдб рд╕реНрдерд┐рддрд┐ рдСрдирд▓рд╛рдЗрди рдЬрд╛рдВрдЪреЗрдВ' : 'Check your ration card status online'}
              </p>
            </div>
            {/* Mandi Bhav Card */}
            <div
              className="relative cursor-pointer bg-gradient-to-br from-blue-50 via-green-50 to-white border-2 border-blue-400 rounded-3xl shadow-xl shadow-blue-200/40 p-7 flex flex-col items-center hover:-translate-y-2 hover:shadow-blue-300/60 hover:shadow-2xl transition-transform duration-200 group"
              onClick={() => navigate('/mandi-bhav')}
            >
              {/* Animated sheen overlay */}
              <div className="absolute inset-0 pointer-events-none z-0">
                <div className="absolute left-0 top-0 w-full h-full animate-sheen" style={{ background: 'linear-gradient(120deg, transparent 60%, rgba(255,255,255,0.18) 80%, transparent 100%)' }} />
              </div>
              {/* Dots + wavy pattern overlay */}
              <div className="absolute inset-0 pointer-events-none opacity-10 z-0">
                <svg width="100%" height="100%" viewBox="0 0 120 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <defs>
                    <pattern id="dots3" x="0" y="0" width="10" height="10" patternUnits="userSpaceOnUse">
                      <circle cx="1" cy="1" r="1" fill="#38BDF8" />
                    </pattern>
                  </defs>
                  <rect width="120" height="60" fill="url(#dots3)" />
                  <path d="M0 50 Q30 40 60 50 T120 50" stroke="#22D3EE" strokeWidth="2" fill="none" opacity="0.15" />
                </svg>
              </div>
              {/* Digital motif (wifi/circuit) at bottom-right */}
              <div className="absolute bottom-3 right-3 opacity-20 z-0">
                <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="18" cy="18" r="16" stroke="#38BDF8" strokeWidth="2" fill="none" />
                  <path d="M10 24 Q18 14 26 24" stroke="#22D3EE" strokeWidth="2" fill="none" />
                  <circle cx="18" cy="24" r="2" fill="#22D3EE" />
                </svg>
              </div>
              <div className="w-14 h-14 rounded-full flex items-center justify-center mb-3 bg-gradient-to-br from-blue-200 via-green-100 to-white shadow-md group-hover:scale-110 transition-transform duration-200 z-10">
                <span className="text-3xl">ЁЯМ╛</span>
              </div>
              <h3 className="text-lg font-bold text-blue-900 mb-1 drop-shadow-sm z-10">
                {i18n.language === 'hi' ? 'рдордВрдбреА рднрд╛рд╡' : 'Mandi Bhav'}
              </h3>
              <p className="text-black text-center text-sm z-10">
                {i18n.language === 'hi' ? 'рдХреБрдЫ рдореБрдЦреНрдп рдлрд╕рд▓реЛрдВ рдХреЗ рд▓рд┐рдП рд╡рд┐рд╢реНрд╡рд╕рдиреАрдп рдмрд╛рдЬрд╛рд░ рджрд░ рджреЗрдЦреЗрдВ' : 'See latest market rates for key crops'}
              </p>
            </div>
            {/* Rozgar Kendra Card */}
            <div
              className="relative cursor-pointer bg-gradient-to-br from-blue-50 via-green-50 to-white border-2 border-blue-400 rounded-3xl shadow-xl shadow-blue-200/40 p-7 flex flex-col items-center hover:-translate-y-2 hover:shadow-blue-300/60 hover:shadow-2xl transition-transform duration-200 group"
              onClick={() => navigate('/rozgar-kendra')}
            >
              {/* Animated sheen overlay */}
              <div className="absolute inset-0 pointer-events-none z-0">
                <div className="absolute left-0 top-0 w-full h-full animate-sheen" style={{ background: 'linear-gradient(120deg, transparent 60%, rgba(255,255,255,0.18) 80%, transparent 100%)' }} />
              </div>
              {/* Dots + wavy pattern overlay */}
              <div className="absolute inset-0 pointer-events-none opacity-10 z-0">
                <svg width="100%" height="100%" viewBox="0 0 120 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <defs>
                    <pattern id="dots3" x="0" y="0" width="10" height="10" patternUnits="userSpaceOnUse">
                      <circle cx="1" cy="1" r="1" fill="#38BDF8" />
                    </pattern>
                  </defs>
                  <rect width="120" height="60" fill="url(#dots3)" />
                  <path d="M0 50 Q30 40 60 50 T120 50" stroke="#22D3EE" strokeWidth="2" fill="none" opacity="0.15" />
                </svg>
              </div>
              {/* Digital motif (wifi/circuit) at bottom-right */}
              <div className="absolute bottom-3 right-3 opacity-20 z-0">
                <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="18" cy="18" r="16" stroke="#38BDF8" strokeWidth="2" fill="none" />
                  <path d="M10 24 Q18 14 26 24" stroke="#22D3EE" strokeWidth="2" fill="none" />
                  <circle cx="18" cy="24" r="2" fill="#22D3EE" />
                </svg>
              </div>
              <div className="w-14 h-14 rounded-full flex items-center justify-center mb-3 bg-gradient-to-br from-blue-200 via-green-100 to-white shadow-md group-hover:scale-110 transition-transform duration-200 z-10">
                <span className="text-3xl">ЁЯТ╝</span>
              </div>
              <h3 className="text-lg font-bold text-blue-900 mb-1 drop-shadow-sm z-10">
                {i18n.language === 'hi' ? 'рд░реЛрдЬрдЧрд╛рд░ рдХреЗрдВрджреНрд░' : 'Rozgar Kendra'}
              </h3>
              <p className="text-black text-center text-sm z-10">
                {i18n.language === 'hi' ? 'рд╕реНрдерд╛рдиреАрдп рдФрд░ рд╕рд░рдХрд╛рд░реА рдиреМрдХрд░рд┐рдпреЛрдВ рдЦреЛрдЬреЗрдВ' : 'Find local and government jobs'}
              </p>
            </div>
            {/* Scholarship Center */}
            <div
              className="relative cursor-pointer bg-gradient-to-br from-blue-50 via-green-50 to-white border-2 border-blue-400 rounded-3xl shadow-xl shadow-blue-200/40 p-7 flex flex-col items-center hover:-translate-y-2 hover:shadow-blue-300/60 hover:shadow-2xl transition-transform duration-200 group"
              onClick={() => navigate('/scholarship-center')}
            >
              {/* Animated sheen overlay */}
              <div className="absolute inset-0 pointer-events-none z-0">
                <div className="absolute left-0 top-0 w-full h-full animate-sheen" style={{ background: 'linear-gradient(120deg, transparent 60%, rgba(255,255,255,0.18) 80%, transparent 100%)' }} />
              </div>
              {/* Dots + wavy pattern overlay */}
              <div className="absolute inset-0 pointer-events-none opacity-10 z-0">
                <svg width="100%" height="100%" viewBox="0 0 120 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <defs>
                    <pattern id="dots3" x="0" y="0" width="10" height="10" patternUnits="userSpaceOnUse">
                      <circle cx="1" cy="1" r="1" fill="#38BDF8" />
                    </pattern>
                  </defs>
                  <rect width="120" height="60" fill="url(#dots3)" />
                  <path d="M0 50 Q30 40 60 50 T120 50" stroke="#22D3EE" strokeWidth="2" fill="none" opacity="0.15" />
                </svg>
              </div>
              {/* Digital motif (wifi/circuit) at bottom-right */}
              <div className="absolute bottom-3 right-3 opacity-20 z-0">
                <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="18" cy="18" r="16" stroke="#38BDF8" strokeWidth="2" fill="none" />
                  <path d="M10 24 Q18 14 26 24" stroke="#22D3EE" strokeWidth="2" fill="none" />
                  <circle cx="18" cy="24" r="2" fill="#22D3EE" />
                </svg>
              </div>
              <div className="w-14 h-14 rounded-full flex items-center justify-center mb-3 bg-gradient-to-br from-blue-200 via-green-100 to-white shadow-md group-hover:scale-110 transition-transform duration-200 z-10">
                <span className="text-3xl">ЁЯОУ</span>
              </div>
              <h3 className="text-lg font-bold text-blue-900 mb-1 drop-shadow-sm z-10">
                {i18n.language === 'hi' ? 'рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐ рдХреЗрдВрджреНрд░ рдФрд░ рдЫрд╛рддреНрд░ рдорджрдж' : 'Scholarship & Student Help Center'}
              </h3>
              <p className="text-black text-center text-sm z-10">
                {i18n.language === 'hi' ? 'рдЫрд╛рддреНрд░рд╡реГрддреНрддрд┐ рдФрд░ рдЧрд╛рдЗрдб рдЦреЛрдЬреЗрдВ' : 'Find scholarships and guides'}
              </p>
            </div>
            {/* Village Assistant */}
            <div
              className="relative cursor-pointer bg-gradient-to-br from-blue-50 via-green-50 to-white border-2 border-blue-400 rounded-3xl shadow-xl shadow-blue-200/40 p-7 flex flex-col items-center hover:-translate-y-2 hover:shadow-blue-300/60 hover:shadow-2xl transition-transform duration-200 group"
              onClick={() => navigate('/village-assistant')}
            >
              {/* Animated sheen overlay */}
              <div className="absolute inset-0 pointer-events-none z-0">
                <div className="absolute left-0 top-0 w-full h-full animate-sheen" style={{ background: 'linear-gradient(120deg, transparent 60%, rgba(255,255,255,0.18) 80%, transparent 100%)' }} />
              </div>
              {/* Dots + wavy pattern overlay */}
              <div className="absolute inset-0 pointer-events-none opacity-10 z-0">
                <svg width="100%" height="100%" viewBox="0 0 120 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <defs>
                    <pattern id="dots3" x="0" y="0" width="10" height="10" patternUnits="userSpaceOnUse">
                      <circle cx="1" cy="1" r="1" fill="#38BDF8" />
                    </pattern>
                  </defs>
                  <rect width="120" height="60" fill="url(#dots3)" />
                  <path d="M0 50 Q30 40 60 50 T120 50" stroke="#22D3EE" strokeWidth="2" fill="none" opacity="0.15" />
                </svg>
              </div>
              {/* Digital motif (wifi/circuit) at bottom-right */}
              <div className="absolute bottom-3 right-3 opacity-20 z-0">
                <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="18" cy="18" r="16" stroke="#38BDF8" strokeWidth="2" fill="none" />
                  <path d="M10 24 Q18 14 26 24" stroke="#22D3EE" strokeWidth="2" fill="none" />
                  <circle cx="18" cy="24" r="2" fill="#22D3EE" />
                </svg>
              </div>
              <div className="w-14 h-14 rounded-full flex items-center justify-center mb-3 bg-gradient-to-br from-blue-200 via-green-100 to-white shadow-md group-hover:scale-110 transition-transform duration-200 z-10">
                <span className="text-3xl">ЁЯдЦ</span>
              </div>
              <h3 className="text-lg font-bold text-blue-900 mb-1 drop-shadow-sm z-10">
                {i18n.language === 'hi' ? 'рдЧрд╛рдБрд╡ рд╕рд╣рд╛рдпрдХ' : 'Village Assistant'}
              </h3>
              <p className="text-black text-center text-sm z-10">
                {i18n.language === 'hi' ? 'рдпреЛрдЬрдирд╛рдУрдВ, рдлреЙрд░реНрдореЛрдВ рдпрд╛ рджрд╕реНрддрд╛рд╡реЗрдЬреЛрдВ рдХреЗ рдмрд╛рд░реЗ рдореЗрдВ рдкреВрдЫреЗрдВ' : 'Ask about schemes, forms, or documents'}
              </p>
            </div>
            {/* Grievance Box */}
            <div
              className="relative cursor-pointer bg-gradient-to-br from-blue-50 via-green-50 to-white border-2 border-blue-400 rounded-3xl shadow-xl shadow-blue-200/40 p-7 flex flex-col items-center hover:-translate-y-2 hover:shadow-blue-300/60 hover:shadow-2xl transition-transform duration-200 group"
              onClick={() => navigate('/grievance-box')}
            >
              {/* Animated sheen overlay */}
              <div className="absolute inset-0 pointer-events-none z-0">
                <div className="absolute left-0 top-0 w-full h-full animate-sheen" style={{ background: 'linear-gradient(120deg, transparent 60%, rgba(255,255,255,0.18) 80%, transparent 100%)' }} />
              </div>
              {/* Dots + wavy pattern overlay */}
              <div className="absolute inset-0 pointer-events-none opacity-10 z-0">
                <svg width="100%" height="100%" viewBox="0 0 120 60" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <defs>
                    <pattern id="dots3" x="0" y="0" width="10" height="10" patternUnits="userSpaceOnUse">
                      <circle cx="1" cy="1" r="1" fill="#38BDF8" />
                    </pattern>
                  </defs>
                  <rect width="120" height="60" fill="url(#dots3)" />
                  <path d="M0 50 Q30 40 60 50 T120 50" stroke="#22D3EE" strokeWidth="2" fill="none" opacity="0.15" />
                </svg>
            </div>
              {/* Digital motif (wifi/circuit) at bottom-right */}
              <div className="absolute bottom-3 right-3 opacity-20 z-0">
                <svg width="36" height="36" viewBox="0 0 36 36" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <circle cx="18" cy="18" r="16" stroke="#38BDF8" strokeWidth="2" fill="none" />
                  <path d="M10 24 Q18 14 26 24" stroke="#22D3EE" strokeWidth="2" fill="none" />
                  <circle cx="18" cy="24" r="2" fill="#22D3EE" />
                </svg>
            </div>
              <div className="w-14 h-14 rounded-full flex items-center justify-center mb-3 bg-gradient-to-br from-blue-200 via-green-100 to-white shadow-md group-hover:scale-110 transition-transform duration-200 z-10">
                <span className="text-3xl">ЁЯУЭ</span>
            </div>
              <h3 className="text-lg font-bold text-blue-900 mb-1 drop-shadow-sm z-10">
                {i18n.language === 'hi' ? 'рдЧреНрд░реАрд╡реЗрдВрд╕ рдмреЙрдХреНрд╕' : 'Grievance Box'}
              </h3>
              <p className="text-black text-center text-sm z-10">
                {i18n.language === 'hi'
                  ? 'рдЕрдкрдиреА рд╕реБрдЭрд╛рд╡ рдпрд╛ рд╢рд┐рдХрд╛рдпрдд рдпрд╣рд╛рдБ рджрд░реНрдЬ рдХрд░реЗрдВ'
                  : 'Submit your suggestion or grievance here'}
              </p>
            </div>
          </div>
        </div>
      </section>
      </div>
    </div>
  );
}

export default Home; 